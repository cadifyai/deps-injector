name: Cadify Dependency Injector
description: Injects dependencies to a specific path.

branding:
  icon: package
  color: black

inputs:
  DEPENDENCY_DIRECTORY:
    description: The path to inject the dependencies.
    required: true
  PYTHON_VERSION:
    description: The Python version to use.
    required: true
    choices: ["3.11", "3.10", "3.9"]
  COMMIT:
    description: Whether to commit the changes to the repository.
    required: false
    default: false
  COMMIT_NAME:
    description: The name to use for the commit.
    required: false
    default: Dependency Injector
  COMMIT_EMAIL:
    description: The email to use for the commit.
    required: false
    default: 38025909+siliconlad@users.noreply.github.com
  BRANCH:
    description: The branch to commit the changes to.
    required: false
    default: main

runs:
  using: composite
  steps:
    - name: Set up venv
      run: |
        python -m venv env
        source env/bin/activate
        python -m pip install -r requirements.txt
      shell: bash

    - name: Inject dependencies
      run: |
        source env/bin/activate
        rm -rf ${{ inputs.DEPENDENCY_DIRECTORY }} && mkdir -p ${{ inputs.DEPENDENCY_DIRECTORY }}
        pip list --local --format freeze --exclude pip --exclude setuptools | awk -F "==" '{print $1}' | sed -E 's/-/_/g' | xargs -I $ find ./env/lib/python${{ inputs.PYTHON_VERSION }}/site-packages/ -maxdepth 1 -regex ".*/site-packages/\$\(\.py\)*" | xargs -I $ cp -r $ ${{ inputs.DEPENDENCY_DIRECTORY }}
      shell: bash

    - name: Commit changes
      if: ${{ inputs.COMMIT == true }}
      run: |
        git add ${{ inputs.DEPENDENCY_DIRECTORY }}
        git config --global user.name ${{ inputs.COMMIT_NAME }}
        git config --global user.email ${{ inputs.COMMIT_EMAIL }}
        git commit -m "Inject dependencies"  --allow-empty
        git push origin HEAD:${{ inputs.BRANCH }}
      shell: bash

    - name: Cleanup
      run: |
        rm -rf env
      shell: bash
